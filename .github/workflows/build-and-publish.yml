name: build

on:
  push:
    branches: [main]
  schedule:
    - cron: '3 4 * * *'
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  attestations: write
  id-token: write
  security-events: write

concurrency:
  group: build-main
  cancel-in-progress: true

jobs:
  build-and-scan:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Determine runtime digest & plugin commit
        id: versions
        shell: bash
        run: |
          set -euo pipefail
          runtime=$(docker manifest inspect --verbose caddy:2-alpine | jq -r 'if type=="array" then .[0].Descriptor.digest else .Descriptor.digest end')
          plugin=$(git ls-remote https://github.com/hslatman/caddy-crowdsec-bouncer.git refs/heads/main | cut -f1)
          dfhash=$(sha256sum Dockerfile | cut -d' ' -f1)
          echo "runtime=$runtime" >>"$GITHUB_OUTPUT"
          echo "plugin=$plugin" >>"$GITHUB_OUTPUT"
          echo "dockerfile_hash=$dfhash" >>"$GITHUB_OUTPUT"

      - name: Compute key tag
        id: key
        run: |
          set -euo pipefail
          key="${{ steps.versions.outputs.runtime }}-${{ steps.versions.outputs.plugin }}-${{ steps.versions.outputs.dockerfile_hash }}"
          echo "tag=base-$(echo -n "$key" | sha256sum | cut -c1-16)" >> "$GITHUB_OUTPUT"

      - name: Check if current base/plugin build already exists
        id: exists
        run: |
          set -euo pipefail
          if docker manifest inspect ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image:${{ steps.key.outputs.tag }} >/dev/null 2>&1; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Enable QEMU for multi‑arch build
        if: steps.exists.outputs.skip == 'false'
        uses: docker/setup-qemu-action@v3.2.0

      - name: Initialize Docker Buildx builder
        if: steps.exists.outputs.skip == 'false'
        uses: docker/setup-buildx-action@v3.7.1

      - name: Generate image metadata
        if: steps.exists.outputs.skip == 'false'
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image
          tags: |
            type=raw,value=latest
            type=sha
            type=raw,value=${{ steps.key.outputs.tag }}
          labels: |
            org.opencontainers.image.title=Caddy with CrowdSec HTTP Bouncer
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Authenticate to GHCR registry
        if: steps.exists.outputs.skip == 'false'
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push multi‑arch image
        if: steps.exists.outputs.skip == 'false'
        id: build
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CADDY_VERSION=2
            CROWDSEC_BOUNCER_REF=${{ steps.versions.outputs.plugin }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Attest build provenance
        if: steps.exists.outputs.skip == 'false'
        uses: actions/attest-build-provenance@v1.4.3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true

      - name: Install Trivy scanner
        if: steps.exists.outputs.skip == 'false'
        uses: aquasecurity/setup-trivy@v0.2.4

      - name: Scan published image with Trivy
        if: steps.exists.outputs.skip == 'false'
        run: |
          trivy image \
            --severity CRITICAL,HIGH \
            --ignore-unfixed \
            --format sarif \
            --output trivy-results.sarif \
            ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image@${{ steps.build.outputs.digest }}

      - name: Upload SARIF report to GitHub Code Scanning
        if: steps.exists.outputs.skip == 'false'
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: trivy-results.sarif
