name: build

on:
  push:
    branches: [main]
  schedule:
    - cron: '3 4 * * *'

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-and-build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: fetch-remote-digest
        id: digest
        run: |
          remote=$(docker manifest inspect --verbose caddy:2-alpine | jq -r 'if type=="array" then .[0].Descriptor.digest else .Descriptor.digest end')
          echo "remote=$remote" >>"$GITHUB_OUTPUT"

      - name: restore-last-digest
        id: cache
        uses: actions/cache@v4
        with:
          path: last_digest.txt
          key: digest-${{ runner.os }}-${{ steps.digest.outputs.remote }}
          restore-keys: digest-${{ runner.os }}-

      - name: compare-digest
        id: changed
        run: |
          if [[ -f last_digest.txt && "$(cat last_digest.txt)" == "${{ steps.digest.outputs.remote }}" ]]; then
            echo "changed=false" >>"$GITHUB_OUTPUT"
          else
            echo "changed=true" >>"$GITHUB_OUTPUT"
          fi

      - name: setup-buildx
        if: steps.changed.outputs.changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: login-ghcr
        if: steps.changed.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: build-and-push
        if: steps.changed.outputs.changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image:latest
            ghcr.io/${{ github.repository_owner }}/caddy-crowdsec-bouncer-image:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: mode=max,inline-only=true

      - name: save-new-digest
        if: steps.changed.outputs.changed == 'true'
        run: echo "${{ steps.digest.outputs.remote }}" > last_digest.txt

      - name: cache-new-digest
        if: steps.changed.outputs.changed == 'true'
        uses: actions/cache@v4
        with:
          path: last_digest.txt
          key: digest-${{ runner.os }}-${{ steps.digest.outputs.remote }}
